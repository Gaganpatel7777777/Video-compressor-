<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Video Compressor</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .custom-font {
            font-family: Copperplate, Papyrus, fantasy;
        }
        @keyframes lightAnimation {
            0% { transform: translate(100%, -100%) scale(1); opacity: 0.3; }
            50% { transform: translate(-50%, 50%) scale(1.5); opacity: 0.5; }
            100% { transform: translate(-150%, 150%) scale(2); opacity: 0; }
        }
        .light-effect {
            position: absolute;
            top: 0;
            right: 0;
            width: 300px;
            height: 300px;
            background: radial-gradient(circle, rgba(255, 255, 255, 0.8) 10%, rgba(255, 255, 255, 0) 70%);
            filter: blur(50px);
            animation: lightAnimation 5s infinite linear;
        }
        @keyframes neonGlow {
            0% { box-shadow: 0 0 5px rgba(0, 255, 255, 0.5), 0 0 10px rgba(0, 255, 255, 0.3), 0 0 15px rgba(0, 255, 255, 0.2); }
            50% { box-shadow: 0 0 10px rgba(0, 255, 255, 0.6), 0 0 20px rgba(0, 255, 255, 0.4), 0 0 30px rgba(0, 255, 255, 0.3); }
            100% { box-shadow: 0 0 5px rgba(0, 255, 255, 0.5), 0 0 10px rgba(0, 255, 255, 0.3), 0 0 15px rgba(0, 255, 255, 0.2); }
        }
        .neon-button {
            animation: neonGlow 1.5s infinite alternate;
            border: 2px solid white; 
            box-shadow: inset 0 0 10px black; 
        }
        .tilt-effect {
            transition: transform 0.3s ease-in-out; will-change: transform;
        }
        .tilt-effect:hover {
            transform: perspective(500px) rotateX(10deg) rotateY(10deg) scale(1.05);
        }
    </style>
</head>
<body class="bg-gradient-to-r from-gray-900 to-black min-h-screen flex flex-col relative">
    <div class="light-effect"></div>
    <header class="w-full bg-gradient-to-r from-blue-950 to-blue-700 text-white py-4 text-center text-2xl font-bold shadow-md bg-opacity-50 backdrop-blur-lg custom-font">
        GD Video Compressor
    </header>
    <div class="flex-grow flex flex-col items-center mt-6">
        <img src="https://raw.githubusercontent.com/Gaganpatel7777777/Video-compressor-/1720dbe8ed7fc730c6c76faecc6648053feca34e/videoimg.png?raw=true" alt="Your Image" class="w-1/8 h-auto rounded-lg shadow-lg mr-8">
        <div class="text-center text-white max-w-lg p-6">
            <h1 class="text-3xl font-bold border-2 border-white px-4 py-2 inline-block rounded-lg">
                Compress Your Video <br> with no quality loss!
            </h1>
            <p class="mt-2 text-gray-300">
                Here we made a compressor using FFmpeg technology to compress your video without any quality loss! <br>
                Our compressor reduces your video size upto 50% of the original size.
            </p>
        </div>
        <div class="mt-4 flex flex-col items-center">
            <input type="file" id="fileInput" class="hidden" />
            <button id="uploadButton" class="relative bg-gradient-to-r from-blue-500 to-purple-600 text-white font-bold py-3 px-8 rounded-full text-lg flex items-center gap-2 shadow-lg 
            before:content-[''] before:absolute before:inset-0 before:rounded-full before:border-4 before:border-blue-400 before:blur-md before:opacity-50 hover:before:opacity-100 transition-all tilt-effect">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M4 12l8-8m0 0l8 8m-8-8v16" />
                </svg>
                UPLOAD
            </button>
            <button id="compressButton" class="mt-6 bg-gradient-to-r from-blue-300 to-purple-400 text-white font-bold py-3 px-8 rounded-full text-lg shadow-md neon-button tilt-effect">
                Compress My Video
            </button>
        </div>
    </div>
    <script>
        let fileUploaded = false;

        document.getElementById('uploadButton').addEventListener('click', function() {
            document.getElementById('fileInput').click();
        });

        document.getElementById('fileInput').addEventListener('change', function() {
            if (this.files.length > 0) {
                let button = document.getElementById('uploadButton');
                button.innerHTML = `
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-6 h-6">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M5 13l4 4L19 7" />
                    </svg>
                    Uploaded
                `;
                button.classList.add('bg-green-500', 'hover:bg-green-600');
                fileUploaded = true;
            }
        });

        document.getElementById('compressButton').addEventListener('click', function() {
            if (!fileUploaded) return;
            
            let button = document.getElementById('compressButton');
            let dots = 0;
            button.innerHTML = "Processing";
            button.disabled = true;
            let interval = setInterval(() => {
                dots = (dots + 1) % 4;
                button.innerHTML = "Processing" + ".".repeat(dots);
            }, 500);
            
            let newTab = window.open('processed_video.mp4', '_blank'); // Replace with actual backend logic
            let checkTab = setInterval(() => {
                if (newTab.closed) {
                    clearInterval(interval);
                    clearInterval(checkTab);
                    location.reload();
                }
            }, 1000);
        });
    </script>
</body>
</html>
